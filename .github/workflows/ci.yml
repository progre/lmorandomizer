name: Build

on:
  push:
    branches: [main]
    tags: ['v*.*.*']

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            cache_key: 'aarch64'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            cache_key: 'x86_84'
          - platform: 'ubuntu-22.04'
            args: ''
            cache_key: ''
          - platform: 'windows-latest'
            args: ''
            cache_key: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-${{ matrix.cache_key }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install

      - name: test
        shell: bash
        run: |
          cd src-tauri/
          cargo test --release

      - if: startsWith(github.ref, 'refs/tags/')
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: App v__VERSION__
          releaseBody: See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: move artifacts
        if: startsWith(github.ref, 'refs/tags/') && matrix.platform == 'windows-latest'
        shell: bash
        run: |
          mkdir --parents artifact
          mv \
            ./src-tauri/target/release/*.exe \
            ./src-tauri/target/release/res \
            ./artifact/
          cp LICENSE README.md ./artifact/
      - if: startsWith(github.ref, 'refs/tags/') && matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: artifact-windows
          path: ./artifact

